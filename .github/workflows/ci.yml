name: Rust CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true
      - uses: mbrobbel/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs:
      - clippy
      - rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Apt Update
        run: sudo apt update -y
      - name: Install protoc
        run: sudo apt install -y protobuf-compiler
      - name: Install stable toolchain
        run: rustup install stable
      - name: Set default toolchain
        run: rustup default stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Build
        run: cargo build --release

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Apt Update
        run: sudo apt update -y
      - name: Install protoc
        run: sudo apt install -y protobuf-compiler
      - name: Install nightly toolchain
        run: rustup install nightly
      - name: Set default toolchain
        run: rustup default nightly
      - name: Install LLVM Tools
        run: rustup component add llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Install Cargo Nextest
        run: cargo install cargo-nextest
      - name: Install Cargo LLVM-Cov
        run: cargo install cargo-llvm-cov
      - name: Run tests
        run: cargo llvm-cov nextest --package borderlands2
      - name: Generate coverage report
        run: cargo llvm-cov report --cobertura > coverage.xml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/nextest/default/junit.xml
      - name: Upload Coverage Results
        uses: coverallsapp/github-action@v2
        if: always()
        with:
          file: coverage.xml
          format: cobertura